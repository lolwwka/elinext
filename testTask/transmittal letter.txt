Сложности:
1) Возникли с Docker. Так как у меня не хватает оперативной памяти на ноутбуке и на пк,
по этой причине к сожалению не сделал docker. Возможно я бы его сделал, но к сожалению не учёл то, что 2 недели в моём
универе будут состоять полностью из зачётов, по этой причине было проблемотично, но возможно написать ТЗ
Для возможности запуска приложения напишу версии используемых api {
Tomcat : 9.0.55
Java : 11.0.11
Postgres 10.17
}
2) На курсах да и в финальном проекте мы сильно не изучали и не использовали юнит тесты и для меня было сложно написать
их так, чтобы всё работало, и на это я потратил больше всего времени
3) Uml диаграмма, я не совсем понял то, какие 2 диаграммы нужны были по этой причине прикрепил диаграмму, которая
создаётся самой idea при подключении bd
4) Работа с optional, в финальном приложении своём я использовал не CrudRepository, а JpaRepository, который уже обора-
чивает наши объекты и не надо было доставать его из optional
Подводя итоги можно сказать что изучил сразу 3 вещи новые написав этот проект : работа с docker, junit, Optional java
К организации структуры :
У меня изначально построилась такая структура в голове. Университет уникален по названию, факультет, относящийся сразу
к двум университетам, в моей практике такого не встречалось. Сделал 1 отдельный класс schedule в котором содержатся те
предметы которые есть у ученика в данный день, так как предметы могут быть у разных студентов.Не делал общую schedule по
группам университета, так как в Европе в многих университетах у каждого ученика своё собственное расписание, возможно
тут я не прав, что решил такую структуру сделать, но мне кажется пусть она и более ресурсозатратна, но она будет более
гибкая.